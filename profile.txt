Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
 50.01      0.33     0.33     2700   122.23   207.41  Rasterizer::raster_triangle(Vertex (&) [3])
 13.64      0.42     0.09 18778656     0.00     0.00  operator*(Color, float)
  9.09      0.48     0.06 69486112     0.00     0.00  Vec3::cross_product_z(Vec3 const&, Vec3 const&)
  9.09      0.54     0.06                             Rasterizer::clear_depth_buffer()
  7.58      0.59     0.05 12513704     0.00     0.00  operator+(Color, Color)
  3.03      0.61     0.02 17376942     0.00     0.00  Vec3::Vec3(float, float, float)
  3.03      0.63     0.02                             Vec3::operator*(float) const
  1.52      0.64     0.01 17417491     0.00     0.00  Vec3::~Vec3()
  1.52      0.65     0.01     9000     1.11     1.11  Mat4::operator*(Mat4 const&) const
  1.52      0.66     0.01                             Rasterizer::render_scene(Scene*)
  0.00      0.66     0.00    44112     0.00     0.00  Vec4::~Vec4()
  0.00      0.66     0.00    24310     0.00     0.00  Vec3::Vec3()
  0.00      0.66     0.00    19812     0.00     0.00  Vec4::Vec4(float, float, float, float)
  0.00      0.66     0.00    16200     0.00     0.00  Vec4::Vec4(Vec3 const&, float)
  0.00      0.66     0.00    16200     0.00     0.00  Mat4::operator*(Vec4 const&) const
  0.00      0.66     0.00    12602     0.00     0.00  Mat4::~Mat4()
  0.00      0.66     0.00     8100     0.00     0.00  Vec4::homogenize()
  0.00      0.66     0.00     8100     0.00     0.00  Vec4::Vec4()
  0.00      0.66     0.00      225     0.00     0.00  Mat4::CreateScaleMatrix(Vec3 const&)
  0.00      0.66     0.00      225     0.00     0.00  Mat4::CreateXRotationMatrix(float)
  0.00      0.66     0.00      225     0.00     0.00  Mat4::CreateYRotationMatrix(float)
  0.00      0.66     0.00      225     0.00     0.00  Mat4::CreateTranslationMatrix(Vec3 const&)
  0.00      0.66     0.00      225     0.00     0.00  Entity::resetTransformation()
  0.00      0.66     0.00      225     0.00     0.00  Entity::getDrawMode() const
  0.00      0.66     0.00        8     0.00     0.00  Vec3::get_normalize() const
  0.00      0.66     0.00        7     0.00     0.00  void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  0.00      0.66     0.00        4     0.00     0.00  void std::vector<Vertex, std::allocator<Vertex> >::_M_emplace_back_aux<Vertex>(Vertex&&)
  0.00      0.66     0.00        2     0.00     0.00  Mat4::Mat4()
  0.00      0.66     0.00        1     0.00     0.00  _GLOBAL__sub_I__Z12key_callbackP10GLFWwindowiiii
  0.00      0.66     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN10RasterizerC2Ejj
  0.00      0.66     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4MeshC2Ev
  0.00      0.66     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN5LightC2Ev
  0.00      0.66     0.00        1     0.00     0.00  Mat4::identity()
  0.00      0.66     0.00        1     0.00     0.01  Mesh::~Mesh()
  0.00      0.66     0.00        1     0.00     0.00  Light::Light()
  0.00      0.66     0.00        1     0.00     0.00  Light::~Light()
  0.00      0.66     0.00        1     0.00     0.00  Entity::~Entity()
  0.00      0.66     0.00        1     0.00     0.00  find_coreGL
  0.00      0.66     0.00        1     0.00     0.00  get_exts
  0.00      0.66     0.00        1     0.00     0.00  get_proc

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 1.51% of 0.66 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     87.7    0.01    0.57                 Rasterizer::render_scene(Scene*) [1]
                0.33    0.23    2700/2700        Rasterizer::raster_triangle(Vertex (&) [3]) [2]
                0.01    0.00    8100/9000        Mat4::operator*(Mat4 const&) const [10]
                0.00    0.00    8100/18778656     operator*(Color, float) [3]
                0.00    0.00   40500/17417491     Vec3::~Vec3() [9]
                0.00    0.00   40500/44112       Vec4::~Vec4() [34]
                0.00    0.00   24300/24310       Vec3::Vec3() [35]
                0.00    0.00   16200/16200       Vec4::Vec4(Vec3 const&, float) [37]
                0.00    0.00   16200/16200       Mat4::operator*(Vec4 const&) const [38]
                0.00    0.00   10800/12602       Mat4::~Mat4() [39]
                0.00    0.00    8100/8100        Vec4::Vec4() [41]
                0.00    0.00    8100/8100        Vec4::homogenize() [40]
                0.00    0.00     225/225         Entity::getDrawMode() const [47]
                0.00    0.00     225/225         Entity::resetTransformation() [46]
-----------------------------------------------
                0.33    0.23    2700/2700        Rasterizer::render_scene(Scene*) [1]
[2]     84.8    0.33    0.23    2700         Rasterizer::raster_triangle(Vertex (&) [3]) [2]
                0.09    0.00 18770556/18778656     operator*(Color, float) [3]
                0.06    0.00 69486112/69486112     Vec3::cross_product_z(Vec3 const&, Vec3 const&) [4]
                0.05    0.00 12513704/12513704     operator+(Color, Color) [6]
                0.02    0.00 17376928/17376942     Vec3::Vec3(float, float, float) [7]
                0.01    0.00 17376928/17417491     Vec3::~Vec3() [9]
-----------------------------------------------
                0.00    0.00    8100/18778656     Rasterizer::render_scene(Scene*) [1]
                0.09    0.00 18770556/18778656     Rasterizer::raster_triangle(Vertex (&) [3]) [2]
[3]     13.6    0.09    0.00 18778656         operator*(Color, float) [3]
-----------------------------------------------
                0.06    0.00 69486112/69486112     Rasterizer::raster_triangle(Vertex (&) [3]) [2]
[4]      9.1    0.06    0.00 69486112         Vec3::cross_product_z(Vec3 const&, Vec3 const&) [4]
-----------------------------------------------
                                                 <spontaneous>
[5]      9.1    0.06    0.00                 Rasterizer::clear_depth_buffer() [5]
-----------------------------------------------
                0.05    0.00 12513704/12513704     Rasterizer::raster_triangle(Vertex (&) [3]) [2]
[6]      7.6    0.05    0.00 12513704         operator+(Color, Color) [6]
-----------------------------------------------
                0.00    0.00      14/17376942     Mesh::CreateCube() [14]
                0.02    0.00 17376928/17376942     Rasterizer::raster_triangle(Vertex (&) [3]) [2]
[7]      3.0    0.02    0.00 17376942         Vec3::Vec3(float, float, float) [7]
-----------------------------------------------
                                                 <spontaneous>
[8]      3.0    0.02    0.00                 Vec3::operator*(float) const [8]
-----------------------------------------------
                0.00    0.00       1/17417491     Scene::~Scene() [15]
                0.00    0.00       2/17417491     Light::~Light() [18]
                0.00    0.00      14/17417491     void std::vector<Vertex, std::allocator<Vertex> >::_M_emplace_back_aux<Vertex>(Vertex&&) [17]
                0.00    0.00      16/17417491     Mesh::~Mesh() [16]
                0.00    0.00      30/17417491     Mesh::CreateCube() [14]
                0.00    0.00   40500/17417491     Rasterizer::render_scene(Scene*) [1]
                0.01    0.00 17376928/17417491     Rasterizer::raster_triangle(Vertex (&) [3]) [2]
[9]      1.5    0.01    0.00 17417491         Vec3::~Vec3() [9]
-----------------------------------------------
                0.00    0.00     225/9000        Entity::scale(Vec3 const&) [12]
                0.00    0.00     225/9000        Entity::translate(Vec3 const&) [13]
                0.00    0.00     450/9000        Entity::rotate(Vec3 const&) [11]
                0.01    0.00    8100/9000        Rasterizer::render_scene(Scene*) [1]
[10]     1.5    0.01    0.00    9000         Mat4::operator*(Mat4 const&) const [10]
-----------------------------------------------
                                                 <spontaneous>
[11]     0.1    0.00    0.00                 Entity::rotate(Vec3 const&) [11]
                0.00    0.00     450/9000        Mat4::operator*(Mat4 const&) const [10]
                0.00    0.00     900/12602       Mat4::~Mat4() [39]
                0.00    0.00     225/225         Mat4::CreateYRotationMatrix(float) [44]
                0.00    0.00     225/225         Mat4::CreateXRotationMatrix(float) [43]
-----------------------------------------------
                                                 <spontaneous>
[12]     0.0    0.00    0.00                 Entity::scale(Vec3 const&) [12]
                0.00    0.00     225/9000        Mat4::operator*(Mat4 const&) const [10]
                0.00    0.00     450/12602       Mat4::~Mat4() [39]
                0.00    0.00     225/225         Mat4::CreateScaleMatrix(Vec3 const&) [42]
-----------------------------------------------
                                                 <spontaneous>
[13]     0.0    0.00    0.00                 Entity::translate(Vec3 const&) [13]
                0.00    0.00     225/9000        Mat4::operator*(Mat4 const&) const [10]
                0.00    0.00     450/12602       Mat4::~Mat4() [39]
                0.00    0.00     225/225         Mat4::CreateTranslationMatrix(Vec3 const&) [45]
-----------------------------------------------
                                                 <spontaneous>
[14]     0.0    0.00    0.00                 Mesh::CreateCube() [14]
                0.00    0.00      30/17417491     Vec3::~Vec3() [9]
                0.00    0.00      14/17376942     Vec3::Vec3(float, float, float) [7]
                0.00    0.00       4/4           void std::vector<Vertex, std::allocator<Vertex> >::_M_emplace_back_aux<Vertex>(Vertex&&) [17]
                0.00    0.00       8/24310       Vec3::Vec3() [35]
                0.00    0.00       8/8           Vec3::get_normalize() const [48]
                0.00    0.00       7/7           void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [49]
-----------------------------------------------
                                                 <spontaneous>
[15]     0.0    0.00    0.00                 Scene::~Scene() [15]
                0.00    0.00       1/1           Mesh::~Mesh() [16]
                0.00    0.00       1/1           Light::~Light() [18]
                0.00    0.00       1/17417491     Vec3::~Vec3() [9]
                0.00    0.00       1/12602       Mat4::~Mat4() [39]
                0.00    0.00       1/1           Entity::~Entity() [57]
-----------------------------------------------
                0.00    0.00       1/1           Scene::~Scene() [15]
[16]     0.0    0.00    0.00       1         Mesh::~Mesh() [16]
                0.00    0.00      16/17417491     Vec3::~Vec3() [9]
-----------------------------------------------
                0.00    0.00       4/4           Mesh::CreateCube() [14]
[17]     0.0    0.00    0.00       4         void std::vector<Vertex, std::allocator<Vertex> >::_M_emplace_back_aux<Vertex>(Vertex&&) [17]
                0.00    0.00      14/17417491     Vec3::~Vec3() [9]
-----------------------------------------------
                0.00    0.00       1/1           Scene::~Scene() [15]
[18]     0.0    0.00    0.00       1         Light::~Light() [18]
                0.00    0.00       2/17417491     Vec3::~Vec3() [9]
-----------------------------------------------
                0.00    0.00       1/1           get_proc [21]
[19]     0.0    0.00    0.00       1         find_coreGL [19]
-----------------------------------------------
                0.00    0.00       1/1           get_proc [21]
[20]     0.0    0.00    0.00       1         get_exts [20]
-----------------------------------------------
                                 404             get_proc [21]
                0.00    0.00       1/1           gladLoadGL [27]
[21]     0.0    0.00    0.00       1+404     get_proc [21]
                0.00    0.00       1/1           find_coreGL [19]
                0.00    0.00       1/1           get_exts [20]
                                 404             get_proc [21]
-----------------------------------------------
                0.00    0.00       4/44112       Mat4::identity() [55]
                0.00    0.00       4/44112       Mat4::viewportMatrix(int, int, int, int) [68]
                0.00    0.00       4/44112       Mat4::perspective(float, float, float, float) [67]
                0.00    0.00     900/44112       Mat4::CreateTranslationMatrix(Vec3 const&) [45]
                0.00    0.00     900/44112       Mat4::CreateScaleMatrix(Vec3 const&) [42]
                0.00    0.00     900/44112       Mat4::CreateXRotationMatrix(float) [43]
                0.00    0.00     900/44112       Mat4::CreateYRotationMatrix(float) [44]
                0.00    0.00   40500/44112       Rasterizer::render_scene(Scene*) [1]
[34]     0.0    0.00    0.00   44112         Vec4::~Vec4() [34]
-----------------------------------------------
                0.00    0.00       2/24310       Light::Light() [56]
                0.00    0.00       8/24310       Mesh::CreateCube() [14]
                0.00    0.00   24300/24310       Rasterizer::render_scene(Scene*) [1]
[35]     0.0    0.00    0.00   24310         Vec3::Vec3() [35]
-----------------------------------------------
                0.00    0.00       4/19812       Mat4::identity() [55]
                0.00    0.00       4/19812       Mat4::viewportMatrix(int, int, int, int) [68]
                0.00    0.00       4/19812       Mat4::perspective(float, float, float, float) [67]
                0.00    0.00     900/19812       Mat4::CreateTranslationMatrix(Vec3 const&) [45]
                0.00    0.00     900/19812       Mat4::CreateScaleMatrix(Vec3 const&) [42]
                0.00    0.00     900/19812       Mat4::CreateXRotationMatrix(float) [43]
                0.00    0.00     900/19812       Mat4::CreateYRotationMatrix(float) [44]
                0.00    0.00   16200/19812       Mat4::operator*(Vec4 const&) const [38]
[36]     0.0    0.00    0.00   19812         Vec4::Vec4(float, float, float, float) [36]
-----------------------------------------------
                0.00    0.00   16200/16200       Rasterizer::render_scene(Scene*) [1]
[37]     0.0    0.00    0.00   16200         Vec4::Vec4(Vec3 const&, float) [37]
-----------------------------------------------
                0.00    0.00   16200/16200       Rasterizer::render_scene(Scene*) [1]
[38]     0.0    0.00    0.00   16200         Mat4::operator*(Vec4 const&) const [38]
                0.00    0.00   16200/19812       Vec4::Vec4(float, float, float, float) [36]
-----------------------------------------------
                0.00    0.00       1/12602       Rasterizer::~Rasterizer() [65]
                0.00    0.00       1/12602       Scene::~Scene() [15]
                0.00    0.00     450/12602       Entity::scale(Vec3 const&) [12]
                0.00    0.00     450/12602       Entity::translate(Vec3 const&) [13]
                0.00    0.00     900/12602       Entity::rotate(Vec3 const&) [11]
                0.00    0.00   10800/12602       Rasterizer::render_scene(Scene*) [1]
[39]     0.0    0.00    0.00   12602         Mat4::~Mat4() [39]
-----------------------------------------------
                0.00    0.00    8100/8100        Rasterizer::render_scene(Scene*) [1]
[40]     0.0    0.00    0.00    8100         Vec4::homogenize() [40]
-----------------------------------------------
                0.00    0.00    8100/8100        Rasterizer::render_scene(Scene*) [1]
[41]     0.0    0.00    0.00    8100         Vec4::Vec4() [41]
-----------------------------------------------
                0.00    0.00     225/225         Entity::scale(Vec3 const&) [12]
[42]     0.0    0.00    0.00     225         Mat4::CreateScaleMatrix(Vec3 const&) [42]
                0.00    0.00     900/19812       Vec4::Vec4(float, float, float, float) [36]
                0.00    0.00     900/44112       Vec4::~Vec4() [34]
-----------------------------------------------
                0.00    0.00     225/225         Entity::rotate(Vec3 const&) [11]
[43]     0.0    0.00    0.00     225         Mat4::CreateXRotationMatrix(float) [43]
                0.00    0.00     900/19812       Vec4::Vec4(float, float, float, float) [36]
                0.00    0.00     900/44112       Vec4::~Vec4() [34]
-----------------------------------------------
                0.00    0.00     225/225         Entity::rotate(Vec3 const&) [11]
[44]     0.0    0.00    0.00     225         Mat4::CreateYRotationMatrix(float) [44]
                0.00    0.00     900/19812       Vec4::Vec4(float, float, float, float) [36]
                0.00    0.00     900/44112       Vec4::~Vec4() [34]
-----------------------------------------------
                0.00    0.00     225/225         Entity::translate(Vec3 const&) [13]
[45]     0.0    0.00    0.00     225         Mat4::CreateTranslationMatrix(Vec3 const&) [45]
                0.00    0.00     900/19812       Vec4::Vec4(float, float, float, float) [36]
                0.00    0.00     900/44112       Vec4::~Vec4() [34]
-----------------------------------------------
                0.00    0.00     225/225         Rasterizer::render_scene(Scene*) [1]
[46]     0.0    0.00    0.00     225         Entity::resetTransformation() [46]
-----------------------------------------------
                0.00    0.00     225/225         Rasterizer::render_scene(Scene*) [1]
[47]     0.0    0.00    0.00     225         Entity::getDrawMode() const [47]
-----------------------------------------------
                0.00    0.00       8/8           Mesh::CreateCube() [14]
[48]     0.0    0.00    0.00       8         Vec3::get_normalize() const [48]
-----------------------------------------------
                0.00    0.00       7/7           Mesh::CreateCube() [14]
[49]     0.0    0.00    0.00       7         void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&) [49]
-----------------------------------------------
                0.00    0.00       2/2           Rasterizer::Rasterizer(unsigned int, unsigned int) [64]
[50]     0.0    0.00    0.00       2         Mat4::Mat4() [50]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [122]
[51]     0.0    0.00    0.00       1         _GLOBAL__sub_I__Z12key_callbackP10GLFWwindowiiii [51]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [122]
[52]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN10RasterizerC2Ejj [52]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [122]
[53]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4MeshC2Ev [53]
-----------------------------------------------
                0.00    0.00       1/1           __libc_csu_init [122]
[54]     0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN5LightC2Ev [54]
-----------------------------------------------
                0.00    0.00       1/1           Entity::Entity(Mesh*) [97]
[55]     0.0    0.00    0.00       1         Mat4::identity() [55]
                0.00    0.00       4/19812       Vec4::Vec4(float, float, float, float) [36]
                0.00    0.00       4/44112       Vec4::~Vec4() [34]
-----------------------------------------------
                0.00    0.00       1/1           Scene::Scene() [95]
[56]     0.0    0.00    0.00       1         Light::Light() [56]
                0.00    0.00       2/24310       Vec3::Vec3() [35]
-----------------------------------------------
                0.00    0.00       1/1           Scene::~Scene() [15]
[57]     0.0    0.00    0.00       1         Entity::~Entity() [57]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2017 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [51] _GLOBAL__sub_I__Z12key_callbackP10GLFWwindowiiii [16] Mesh::~Mesh() [38] Mat4::operator*(Vec4 const&) const
  [52] _GLOBAL__sub_I__ZN10RasterizerC2Ejj [4] Vec3::cross_product_z(Vec3 const&, Vec3 const&) [10] Mat4::operator*(Mat4 const&) const
  [53] _GLOBAL__sub_I__ZN4MeshC2Ev [7] Vec3::Vec3(float, float, float) [48] Vec3::get_normalize() const
  [54] _GLOBAL__sub_I__ZN5LightC2Ev [35] Vec3::Vec3()      [8] Vec3::operator*(float) const
   [1] Rasterizer::render_scene(Scene*) [9] Vec3::~Vec3() [47] Entity::getDrawMode() const
   [2] Rasterizer::raster_triangle(Vertex (&) [3]) [40] Vec4::homogenize() [17] void std::vector<Vertex, std::allocator<Vertex> >::_M_emplace_back_aux<Vertex>(Vertex&&)
   [5] Rasterizer::clear_depth_buffer() [36] Vec4::Vec4(float, float, float, float) [49] void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
  [42] Mat4::CreateScaleMatrix(Vec3 const&) [37] Vec4::Vec4(Vec3 const&, float) [3] operator*(Color, float)
  [43] Mat4::CreateXRotationMatrix(float) [41] Vec4::Vec4() [6] operator+(Color, Color)
  [44] Mat4::CreateYRotationMatrix(float) [34] Vec4::~Vec4() [19] find_coreGL
  [45] Mat4::CreateTranslationMatrix(Vec3 const&) [56] Light::Light() [20] get_exts
  [55] Mat4::identity()       [18] Light::~Light()        [21] get_proc
  [50] Mat4::Mat4()           [46] Entity::resetTransformation()
  [39] Mat4::~Mat4()          [57] Entity::~Entity()
